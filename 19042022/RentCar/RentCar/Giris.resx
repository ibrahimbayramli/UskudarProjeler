<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>